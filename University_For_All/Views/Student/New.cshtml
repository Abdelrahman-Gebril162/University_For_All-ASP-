@using University_For_All.Models
@model University_For_All.ViewModels.StudentNewStudentViewModels


@{
    ViewBag.Title = "New Student";
    Layout = "~/Views/Home/_HomeLayout2.cshtml";
}

<h2>Add New Student</h2>

@using (Html.BeginForm("New", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Student.st_picture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="image-upload">
                <label for="file-input">
                    <img id="image_preview" src="~/images/male-student-icon-png_251938.jpg" style="cursor: pointer; width: 100px; height: 100px; border-radius: 50%;" />
                </label>

                <input id="file-input" name="upload" type="file" onchange="readfile(this)" style="display: none" />
            </div>
            @Html.ValidationMessageFor(model => model.Student.st_picture, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.st_fname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.st_fname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.st_fname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.st_lname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.st_lname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.st_lname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.st_DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.st_DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.st_DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.st_address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.st_address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.st_address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.st_city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.st_city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.st_city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.st_phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.st_phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.st_phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ">
            @Html.LabelFor(model => model.Student.st_email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.st_email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.st_email, "", new { @class = "text-danger" })
                <h4>@ViewBag.message</h4>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.st_password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Student.st_password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Student.st_password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.st_confirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Student.st_confirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Student.st_confirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.st_level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.st_level, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.st_level, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Undergrad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Student.Undergrad)
                    @Html.ValidationMessageFor(model => model.Student.Undergrad, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.FacultyId, "FacultyId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m=>m.Student.FacultyId,ViewBag.Faculty as SelectList,"-- Select Faculty --",new {@class="form-control",onchange="read()"})
                @Html.ValidationMessageFor(model => model.Student.FacultyId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.DepartmentId, "DepartmentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownListFor(m => m.Student.DepartmentId, new SelectList(" "), "-- Select Department --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Student.DepartmentId, "", new {@class = "text-danger"})
            </div>
        </div>
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    function readfile(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#image_preview').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>
<script src="~/Scripts/jquery-1.12.1.min.js"></script>
<script>
    $(document).ready(function() {
        $("#Student_FacultyId").change(function() {
            $.get("/Student/GetDepartmentList",
                { id: $("#Student_FacultyId").val() },
                function(data) {
                    $("#Student_DepartmentId").empty();
                    $.each(data,
                        function(index, row) {
                            $("#Student_DepartmentId")
                                .append("<option value ='" + row.id + "'>" + row.name + "</option>")
                        });
                });
        })
    });
</script>